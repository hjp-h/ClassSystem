<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- @version $Id: applicationContext.xml 561608 2007-08-01 00:33:12Z vgritsenko $ -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


        <import resource="classpath:spring/beans-shiro.xml"    />

        <!--将除了controller以外的纳入ioc容器-->
        <context:component-scan base-package="com.zyb">
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>


        <!--加载数据源信息文件-->
        <context:property-placeholder location="classpath:db.properties"/>

        <!--配置数据源-->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="${jdbc.driverClass}"></property>
            <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
            <property name="user" value="${jdbc.user}"></property>
            <property name="password" value="${jdbc.password}"></property>
            <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
            <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"></property>
        </bean>

        <!--===========================Spring和mybatis整合（拿到sqlsessionfactory和设置mapper接口位置）=============================================-->
        <!--拿到sqlsessionfactory的管理权 加入数据源，配置文件，以及mapper映射文件位置-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"></property>
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>
            <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        </bean>
        <!--扫描所有dao接口的实现，加入到ioc容器中 -->
        <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.zyb.dao"></property>
        </bean>
        <!--配置一个sqlsession-->
        <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
            <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
            <constructor-arg name="executorType" value="SIMPLE"></constructor-arg>
        </bean>
    <!--===============================================================================================================================-->

        <!--配置事务控制-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"></property>
        </bean>

        <!--配置事务增强，事务如何切入-->
        <tx:advice id="txAvice" transaction-manager="transactionManager">
            <tx:attributes>
                <!--所有方法都是事务方法-->
                <tx:method name="*"/>
                <!--以get开始的所有方法-->
                <tx:method name="get*" read-only="true"/>
            </tx:attributes>
        </tx:advice>

        <!--开启基于注解的事务-->
        <aop:config>
            <!--切入点表达式-->
            <aop:pointcut expression="execution(* com.zyb.service..*(..))" id="txPoint"/>
            <!--配置事务增强-->
            <aop:advisor advice-ref="txAvice" pointcut-ref="txPoint"/>
        </aop:config>
</beans>
